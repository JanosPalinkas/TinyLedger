{"ast":null,"code":"var _jsxFileName = \"/Users/janospalinkas/Projects/CodeChallenges/TinyLedger/tinyledger-ui/src/components/TransactionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getBalance, getTransactions, postTransaction } from \"../api/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [balance, setBalance] = useState(0);\n  const [amount, setAmount] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"0\");\n  const accountId = \"1\";\n  useEffect(() => {\n    getBalance(accountId).then(setBalance);\n    getTransactions(accountId).then(setTransactions);\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await postTransaction(accountId, {\n        amount: parseFloat(amount),\n        description,\n        type: parseInt(type)\n      });\n\n      // Refresh balance and transactions\n      getBalance(accountId).then(setBalance);\n      getTransactions(accountId).then(setTransactions);\n\n      // Reset form\n      setAmount(\"\");\n      setDescription(\"\");\n      setType(\"0\");\n    } catch (err) {\n      console.error(\"Failed to submit transaction\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Account Balance: $\", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Amount\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"0\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [new Date(t.timestamp).toLocaleString(), \" - $\", t.amount, \" -\", \" \", t.description]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionList, \"aY59ZTUqZPkv72rs9txhp9cZYUM=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useEffect","useState","getBalance","getTransactions","postTransaction","jsxDEV","_jsxDEV","TransactionList","_s","transactions","setTransactions","balance","setBalance","amount","setAmount","description","setDescription","type","setType","accountId","then","handleSubmit","e","preventDefault","parseFloat","parseInt","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","map","t","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/janospalinkas/Projects/CodeChallenges/TinyLedger/tinyledger-ui/src/components/TransactionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getBalance, getTransactions, postTransaction } from \"../api/client\";\n\ninterface Transaction {\n  id: string;\n  timestamp: string;\n  amount: number;\n  type: number;\n  description: string;\n}\n\nconst TransactionList: React.FC = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [balance, setBalance] = useState<number>(0);\n  const [amount, setAmount] = useState<string>(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState<string>(\"0\");\n\n  const accountId = \"1\";\n\n  useEffect(() => {\n    getBalance(accountId).then(setBalance);\n    getTransactions(accountId).then(setTransactions);\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      await postTransaction(accountId, {\n        amount: parseFloat(amount),\n        description,\n        type: parseInt(type),\n      });\n\n      // Refresh balance and transactions\n      getBalance(accountId).then(setBalance);\n      getTransactions(accountId).then(setTransactions);\n\n      // Reset form\n      setAmount(\"\");\n      setDescription(\"\");\n      setType(\"0\");\n    } catch (err) {\n      console.error(\"Failed to submit transaction\", err);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Account Balance: ${balance}</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          placeholder=\"Amount\"\n          required\n        />\n        <input\n          type=\"text\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Description\"\n          required\n        />\n        <select value={type} onChange={(e) => setType(e.target.value)}>\n          <option value=\"0\">Deposit</option>\n          <option value=\"1\">Withdrawal</option>\n        </select>\n        <button type=\"submit\">Add Transaction</button>\n      </form>\n      <ul>\n        {transactions.map((t) => (\n          <li key={t.id}>\n            {new Date(t.timestamp).toLocaleString()} - ${t.amount} -{\" \"}\n            {t.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}