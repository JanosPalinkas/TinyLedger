{"ast":null,"code":"var _jsxFileName = \"/Users/janospalinkas/Projects/CodeChallenges/TinyLedger/tinyledger-ui/src/components/TransactionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getBalance, postTransaction } from \"../api/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [balance, setBalance] = useState(0);\n\n  // Form state\n  const [amount, setAmount] = useState(0);\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(0); // 0 = Deposit, 1 = Withdrawal\n\n  const accountId = \"1\";\n  const loadData = async () => {\n    const balance = await getBalance(accountId);\n    setBalance(balance);\n    const res = await fetch(`http://localhost:5078/api/accounts/${accountId}/transactions`);\n    const data = await res.json();\n    setTransactions(data.items || []); // fallback if data.items is missing\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await postTransaction(accountId, {\n      amount,\n      description,\n      type\n    });\n\n    // Clear the form\n    setAmount(0);\n    setDescription(\"\");\n    setType(0);\n\n    // Refresh data\n    await loadData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Account Balance: $\", balance.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: amount,\n        onChange: e => setAmount(parseFloat(e.target.value)),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: type,\n        onChange: e => setType(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"Withdrawal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [new Date(t.timestamp).toLocaleString(), \": \", t.type === 0 ? \"+\" : \"-\", \"$\", t.amount, \" - \", t.description]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionList, \"8ybP69meSGTz8eb3Yw8Ap/1VQ/4=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useEffect","useState","getBalance","postTransaction","jsxDEV","_jsxDEV","TransactionList","_s","transactions","setTransactions","balance","setBalance","amount","setAmount","description","setDescription","type","setType","accountId","loadData","res","fetch","data","json","items","handleSubmit","e","preventDefault","children","toFixed","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","marginBottom","placeholder","value","onChange","parseFloat","target","required","Number","map","t","Date","timestamp","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/janospalinkas/Projects/CodeChallenges/TinyLedger/tinyledger-ui/src/components/TransactionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getBalance, postTransaction } from \"../api/client\";\n\ninterface Transaction {\n  id: string;\n  timestamp: string;\n  amount: number;\n  type: number;\n  description: string;\n}\n\nconst TransactionList: React.FC = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [balance, setBalance] = useState<number>(0);\n\n  // Form state\n  const [amount, setAmount] = useState<number>(0);\n  const [description, setDescription] = useState<string>(\"\");\n  const [type, setType] = useState<number>(0); // 0 = Deposit, 1 = Withdrawal\n\n  const accountId = \"1\";\n\n  const loadData = async () => {\n    const balance = await getBalance(accountId);\n    setBalance(balance);\n\n    const res = await fetch(\n      `http://localhost:5078/api/accounts/${accountId}/transactions`\n    );\n    const data = await res.json();\n    setTransactions(data.items || []); // fallback if data.items is missing\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    await postTransaction(accountId, {\n      amount,\n      description,\n      type,\n    });\n\n    // Clear the form\n    setAmount(0);\n    setDescription(\"\");\n    setType(0);\n\n    // Refresh data\n    await loadData();\n  };\n\n  return (\n    <div>\n      <h2>Account Balance: ${balance.toFixed(2)}</h2>\n\n      <form onSubmit={handleSubmit} style={{ marginBottom: \"1rem\" }}>\n        <input\n          type=\"number\"\n          placeholder=\"Amount\"\n          value={amount}\n          onChange={(e) => setAmount(parseFloat(e.target.value))}\n          required\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          required\n        />\n        <select value={type} onChange={(e) => setType(Number(e.target.value))}>\n          <option value={0}>Deposit</option>\n          <option value={1}>Withdrawal</option>\n        </select>\n        <button type=\"submit\">Add Transaction</button>\n      </form>\n\n      <ul>\n        {transactions.map((t) => (\n          <li key={t.id}>\n            {new Date(t.timestamp).toLocaleString()}: {t.type === 0 ? \"+\" : \"-\"}\n            ${t.amount} - {t.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}